spring:
  application:
    name: springboot-init
  # 邮箱配置
  mail:
    host: smtp.qq.com # QQ 邮箱的 SMTP 服务器地址
    port: 465                          # 邮件端口，QQ 邮箱通常使用 465
    # 用户名
    username: 3658043236@qq.com
    # 授权码
    password: xxx # IMAP/SMTP服务 :  QQ 邮箱的授权码（不是邮箱密码）
    properties:
      mail:
        smtp:
          auth: true
          ssl:
            enable: true
  # 默认 dev 环境
  profiles:
    active: dev
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # 全局统一时间格式
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  # session 配置
  session:
    # Todo 取消注释开启分布式 session（须先配置 Redis）
    store-type: redis
    # 30 天过期
    timeout: 2592000
  # 数据库配置
  # todo 需替换配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/blog
    username: root
    password: xxx
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password: xxx
    timeout: 10s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 150
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 5000ms
        # 连接池中的最大空闲连接
        max-idle: 100
        # 连接池中的最小空闲连接
        min-idle: 50
  # Elasticsearch 配置
  # todo 需替换配置，然后取消注释
  #  elasticsearch:
  #    uris: http://localhost:9200
  #    username: root
  #    password: xxx
  # 文件上传
  servlet:
    multipart:
      # 大小限制
      max-file-size: 10MB
server:
  address: 0.0.0.0
  port: 8101
  servlet:
    context-path: /api
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
# 微信相关
wx:
  # 微信公众平台
  # todo 需替换配置
  mp:
    token: xxx
    aesKey: xxx
    appId: xxx
    secret: xxx
    config-storage:
      http-client-type: HttpClient
      key-prefix: wx
      redis:
        host: 127.0.0.1
        port: 6379
      type: Memory
  # 微信开放平台
  # todo 需替换配置
  open:
    appId: xxx
    appSecret: xxx
# 对象存储
# Todo 配置自己的
cos:
  client:
    accessKey: xxx
    secretKey: xxx
    region: ap-guangzhou
    bucket: xxx

# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "BLOG"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.wy.wydemo.controller
    contact:
      name: "wy770"
      email: "3658043236@qq.com"
      url: "https://blog.csdn.net/wy990880?spm=1011.2415.3001.5343"

# swagger配置
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
  packages-to-scan:
    - com.wy.wydemo.controller

# 线程池配置
thread:
  pool:
    core-pool-size: 5
    max-pool-size: 10
    queue-capacity: 50
    keep-alive-seconds: 60

# 如何获取 QQ 邮箱授权码
#登录 QQ 邮箱，进入 设置 > 第三方服务。
#在 SMTP服务 中开启后，会生成一个授权码，将其复制填入 password 配置项。

# 第三方登录
oauth:
  qq:
    app-id: xxx  # QQ互联提供的应用ID (App ID)
    app-key: xxx  # QQ互联提供的应用密钥 (App Key)
    grant_type: authorization_code  # 授权类型，固定为 "authorization_code"
    redirect-url: https://www.ttkwsd.top/oauth/login/qq  # QQ登录后回调的URL，需要在QQ互联后台配置
    access-token-url: https://graph.qq.com/oauth2.0/token  # 获取Access Token的URL
    user-openid-url: https://graph.qq.com/oauth2.0/me  # 获取用户OpenID的URL
    user-info-url: https://graph.qq.com/user/get_user_info  # 获取用户信息的URL

# Sa-Token 配置
sa-token:
  is-persistent: true  # 启用持久化，存储登录状态到 Redis
  token-name: "satoken"  # 自定义 token 名称
  timeout: 2592000  # Token 过期时间，单位为秒，30天
  active-timeout: -1  # 设置为-1表示在有效期内无需续期，Token 持久化
  token-session-check-login: true  # 启用 token 持久化登录
  token-dao: "redis"  # 使用 Redis 作为 Sa-Token 的数据存储

# 日志级别配置
logging:
  level:
    cn.dev33.satoken: DEBUG  # 启用 Sa-Token 的调试日志

upload:
  strategy: cos
  local:
    # nginx映射本地文件路径
    url: https://static.ttkwsd.top/
    # 本地文件存储路径
    path: D:/备份/自己用的测试/wyDemoJava/user/load/upload
  # cos 腾讯云存储
  cos:
    url: wy770880-1327706280.cos.ap-guangzhou.myqcloud.com
    secretId: xxx
    secretKey: xxx
    region: ap-guangzhou
    bucketName: xxx

# 搜索模式 可选 elasticsearch、mysql
search:
  mode: mysql

# 博客链接
blog:
  url: https://blog.csdn.net/wy990880?spm=1011.2415.3001.5343
